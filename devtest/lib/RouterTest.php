<?php

require_once(getcwd() . '\dev\lib\router.php');

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-09-08 at 00:13:33.
 */
class RouterTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Router
     */
    protected $_object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
		$this->_object = new Router;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
	}

	/**
	 * Test getController for a URI with no parameter
	 */
	public function test_getController_no_parameter()
	{
		$sampleUri = '/';
		$className = $this->_object->getController($sampleUri);
		$this->assertEquals($className, 'Controller\Home');
	}

	/**
	 * Test getController for calling admin controller
	 */
	public function test_getController_admin()
	{
		$sampleUri = '/admin/';
		$className = $this->_object->getController($sampleUri);
		$this->assertEquals($className, 'Controller\Admin');
	}

	/**
	 * Test getController for calling non-existing controller
	 */
	public function test_getController_non_exist()
	{
		$sampleUri = '/test/';
		$className = $this->_object->getController($sampleUri);
		$this->assertEquals($className, 'Controller\Home');
	}
	
	/**
	 * Test getAction for a URI with no action parameter
	 */
	public function test_getAction_no_parameter()
	{
		$sampleUri = '/';
		$actionName = $this->_object->getAction($sampleUri);
		$this->assertEquals($actionName, 'index');
	}

	/**
	 * Test getAction for a URI requesting action under Home controller
	 */
	public function test_getAction_home_action()
	{
		$sampleUri = '/post/1';
		$actionName = $this->_object->getAction($sampleUri);
		$this->assertEquals($actionName, 'view');
	}

	/**
	 * Test getAction for URI requesting action under Admin controller
	 */
	public function test_getAction_admin_action()
	{
		$sampleUri = '/admin/post/1';
		$actionName = $this->_object->getAction($sampleUri);
		$this->assertEquals($actionName, 'edit');
	}

	/**
	 * Test getAction for non-existing action
	 */
	public function test_getAction_non_exist()
	{
		$sampleUri = '/test';
		$actionName = $this->_object->getAction($sampleUri);
		$this->assertEquals($actionName, 'ActionError');
	}
	

}
